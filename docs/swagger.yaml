openapi: '3.0.0'

info:
  version: '0.0.1'
  title: 'plankton-auth'

servers:
  - url: 'https://auth.planktondoc.com/staging'
  - url: 'https://auth.planktondoc.com/production'

tags:
  - name: signup
    description: Resources for register account
  - name: signin
    description: Resources for login

paths:
  /signup:
    post:
      summary: Register user accounnt
      description: Register a user account
      tags:
        - signup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignUp"
      responses:
        '201':
          description: 'Register sucessfull'
        '400':
          description: Bad request.
        '500':
          description: Server internal error.
      x-attr-serverless:
        functionName: signUp
        cors: true
  /signin:
    post:
      summary: Login user accounnt
      description: Login a user account
      tags:
        - signup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignIn"
      responses:
        '200':
          description: 'Login sucessfull'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Authentication"
        '400':
          description: Bad request.
        '401':
          description: Not authorized.
        '500':
          description: Server internal error.
      x-attr-serverless:
        functionName: signIn
        cors: true

components:
  schemas:
    SignUp:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        name:
          type: string
        confirmPassword:
          type: string
    SignIn:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    Authentication:
      type: object
      properties:
        AccessToken:
          type: string
        TokenType:
          type: string
        RefreshToken:
          type: string
        ExpiresIn:
          type: number
        IdToken:
          type: string